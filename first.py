# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rJ62Glxo96-Ml_jxLJ69eq9m_Wd2-pDL
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

credit_card_data = pd.read_csv('/content/creditcard.csv')

credit_card_data.info()

credit_card_data['Class'].value_counts()

legit = credit_card_data[credit_card_data.Class == 0]
fraud = credit_card_data[credit_card_data.Class == 1]

print(legit.shape)
print(fraud.shape)

legit.Amount.describe()

fraud.Amount.describe()

"""Under Sampling -
Building a sample data set containing similar distributions of Legit and Fraudulent Transactions

Number of Fraudulent Transactions - 232
"""

legit_sample = legit.sample(n=232)

"""Concatenating Two DataFrames"""

new_dataset = pd.concat([legit_sample, fraud], axis=0)

new_dataset['Class'].value_counts()

new_dataset.groupby('Class').mean()

"""Splitting the Data into Features and Targets"""

X = new_dataset.drop(columns='Class', axis=1)
Y = new_dataset['Class']

print(X)

print(Y)

"""Splitting data into training and testing"""

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""Model Training - Logistic Regression"""

model = LogisticRegression()

model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print("Accuracy on training data : ", training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print("Accuracy Score on Test Data : ", test_data_accuracy)

